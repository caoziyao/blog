// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/weixin.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// weixin login
type RequestWeixinLogin struct {
	Appid                string   `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	JsCode               string   `protobuf:"bytes,3,opt,name=js_code,json=jsCode,proto3" json:"js_code,omitempty"`
	GrantType            string   `protobuf:"bytes,4,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestWeixinLogin) Reset()         { *m = RequestWeixinLogin{} }
func (m *RequestWeixinLogin) String() string { return proto.CompactTextString(m) }
func (*RequestWeixinLogin) ProtoMessage()    {}
func (*RequestWeixinLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_weixin_a7013f211486fc0c, []int{0}
}
func (m *RequestWeixinLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestWeixinLogin.Unmarshal(m, b)
}
func (m *RequestWeixinLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestWeixinLogin.Marshal(b, m, deterministic)
}
func (dst *RequestWeixinLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestWeixinLogin.Merge(dst, src)
}
func (m *RequestWeixinLogin) XXX_Size() int {
	return xxx_messageInfo_RequestWeixinLogin.Size(m)
}
func (m *RequestWeixinLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestWeixinLogin.DiscardUnknown(m)
}

var xxx_messageInfo_RequestWeixinLogin proto.InternalMessageInfo

func (m *RequestWeixinLogin) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *RequestWeixinLogin) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *RequestWeixinLogin) GetJsCode() string {
	if m != nil {
		return m.JsCode
	}
	return ""
}

func (m *RequestWeixinLogin) GetGrantType() string {
	if m != nil {
		return m.GrantType
	}
	return ""
}

type ResponseWeixinLogin struct {
	Openid               string   `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	SessionKey           string   `protobuf:"bytes,2,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	Unionid              string   `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseWeixinLogin) Reset()         { *m = ResponseWeixinLogin{} }
func (m *ResponseWeixinLogin) String() string { return proto.CompactTextString(m) }
func (*ResponseWeixinLogin) ProtoMessage()    {}
func (*ResponseWeixinLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_weixin_a7013f211486fc0c, []int{1}
}
func (m *ResponseWeixinLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseWeixinLogin.Unmarshal(m, b)
}
func (m *ResponseWeixinLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseWeixinLogin.Marshal(b, m, deterministic)
}
func (dst *ResponseWeixinLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseWeixinLogin.Merge(dst, src)
}
func (m *ResponseWeixinLogin) XXX_Size() int {
	return xxx_messageInfo_ResponseWeixinLogin.Size(m)
}
func (m *ResponseWeixinLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseWeixinLogin.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseWeixinLogin proto.InternalMessageInfo

func (m *ResponseWeixinLogin) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *ResponseWeixinLogin) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

func (m *ResponseWeixinLogin) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

// weixin logout
type RequestWeixinLogout struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestWeixinLogout) Reset()         { *m = RequestWeixinLogout{} }
func (m *RequestWeixinLogout) String() string { return proto.CompactTextString(m) }
func (*RequestWeixinLogout) ProtoMessage()    {}
func (*RequestWeixinLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_weixin_a7013f211486fc0c, []int{2}
}
func (m *RequestWeixinLogout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestWeixinLogout.Unmarshal(m, b)
}
func (m *RequestWeixinLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestWeixinLogout.Marshal(b, m, deterministic)
}
func (dst *RequestWeixinLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestWeixinLogout.Merge(dst, src)
}
func (m *RequestWeixinLogout) XXX_Size() int {
	return xxx_messageInfo_RequestWeixinLogout.Size(m)
}
func (m *RequestWeixinLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestWeixinLogout.DiscardUnknown(m)
}

var xxx_messageInfo_RequestWeixinLogout proto.InternalMessageInfo

func (m *RequestWeixinLogout) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ResponseWeixinLogout struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseWeixinLogout) Reset()         { *m = ResponseWeixinLogout{} }
func (m *ResponseWeixinLogout) String() string { return proto.CompactTextString(m) }
func (*ResponseWeixinLogout) ProtoMessage()    {}
func (*ResponseWeixinLogout) Descriptor() ([]byte, []int) {
	return fileDescriptor_weixin_a7013f211486fc0c, []int{3}
}
func (m *ResponseWeixinLogout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseWeixinLogout.Unmarshal(m, b)
}
func (m *ResponseWeixinLogout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseWeixinLogout.Marshal(b, m, deterministic)
}
func (dst *ResponseWeixinLogout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseWeixinLogout.Merge(dst, src)
}
func (m *ResponseWeixinLogout) XXX_Size() int {
	return xxx_messageInfo_ResponseWeixinLogout.Size(m)
}
func (m *ResponseWeixinLogout) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseWeixinLogout.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseWeixinLogout proto.InternalMessageInfo

func (m *ResponseWeixinLogout) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestWeixinLogin)(nil), "weixin.RequestWeixinLogin")
	proto.RegisterType((*ResponseWeixinLogin)(nil), "weixin.ResponseWeixinLogin")
	proto.RegisterType((*RequestWeixinLogout)(nil), "weixin.RequestWeixinLogout")
	proto.RegisterType((*ResponseWeixinLogout)(nil), "weixin.ResponseWeixinLogout")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WeixinClient is the client API for Weixin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WeixinClient interface {
	WeixinLogin(ctx context.Context, in *RequestWeixinLogin, opts ...grpc.CallOption) (*ResponseWeixinLogin, error)
	WeixinLogout(ctx context.Context, in *RequestWeixinLogout, opts ...grpc.CallOption) (*ResponseWeixinLogout, error)
}

type weixinClient struct {
	cc *grpc.ClientConn
}

func NewWeixinClient(cc *grpc.ClientConn) WeixinClient {
	return &weixinClient{cc}
}

func (c *weixinClient) WeixinLogin(ctx context.Context, in *RequestWeixinLogin, opts ...grpc.CallOption) (*ResponseWeixinLogin, error) {
	out := new(ResponseWeixinLogin)
	err := c.cc.Invoke(ctx, "/weixin.Weixin/WeixinLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *weixinClient) WeixinLogout(ctx context.Context, in *RequestWeixinLogout, opts ...grpc.CallOption) (*ResponseWeixinLogout, error) {
	out := new(ResponseWeixinLogout)
	err := c.cc.Invoke(ctx, "/weixin.Weixin/WeixinLogout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WeixinServer is the server API for Weixin service.
type WeixinServer interface {
	WeixinLogin(context.Context, *RequestWeixinLogin) (*ResponseWeixinLogin, error)
	WeixinLogout(context.Context, *RequestWeixinLogout) (*ResponseWeixinLogout, error)
}

func RegisterWeixinServer(s *grpc.Server, srv WeixinServer) {
	s.RegisterService(&_Weixin_serviceDesc, srv)
}

func _Weixin_WeixinLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestWeixinLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeixinServer).WeixinLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weixin.Weixin/WeixinLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeixinServer).WeixinLogin(ctx, req.(*RequestWeixinLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Weixin_WeixinLogout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestWeixinLogout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeixinServer).WeixinLogout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weixin.Weixin/WeixinLogout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeixinServer).WeixinLogout(ctx, req.(*RequestWeixinLogout))
	}
	return interceptor(ctx, in, info, handler)
}

var _Weixin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "weixin.Weixin",
	HandlerType: (*WeixinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WeixinLogin",
			Handler:    _Weixin_WeixinLogin_Handler,
		},
		{
			MethodName: "WeixinLogout",
			Handler:    _Weixin_WeixinLogout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/weixin.proto",
}

func init() { proto.RegisterFile("proto/weixin.proto", fileDescriptor_weixin_a7013f211486fc0c) }

var fileDescriptor_weixin_a7013f211486fc0c = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xd1, 0x4a, 0xf3, 0x40,
	0x10, 0x85, 0xc9, 0xff, 0xd7, 0x94, 0x4e, 0xbd, 0x1a, 0x4b, 0x5d, 0x52, 0x45, 0xc9, 0x95, 0x08,
	0x56, 0xd0, 0x47, 0x10, 0x84, 0xa2, 0x57, 0x41, 0xf0, 0x32, 0xc4, 0x66, 0xa8, 0x5b, 0x61, 0x67,
	0xcd, 0xee, 0xa2, 0xf1, 0x55, 0x7c, 0x59, 0xc9, 0xee, 0x5a, 0x5b, 0x42, 0xef, 0xf2, 0x9d, 0x99,
	0xcc, 0x99, 0x39, 0x0b, 0xa8, 0x1b, 0xb6, 0x7c, 0xfd, 0x41, 0xf2, 0x53, 0xaa, 0xb9, 0x07, 0x4c,
	0x03, 0xe5, 0x5f, 0x80, 0x05, 0xbd, 0x3b, 0x32, 0xf6, 0xd9, 0x0b, 0x8f, 0xbc, 0x92, 0x0a, 0x27,
	0x70, 0x50, 0x69, 0x2d, 0x6b, 0x91, 0x9c, 0x27, 0x17, 0xa3, 0x22, 0x00, 0x4e, 0x21, 0x35, 0xb4,
	0x6c, 0xc8, 0x8a, 0x7f, 0x5e, 0x8e, 0x84, 0xc7, 0x30, 0x5c, 0x9b, 0x72, 0xc9, 0x35, 0x89, 0xff,
	0xa1, 0xb0, 0x36, 0x77, 0x5c, 0x13, 0x9e, 0x02, 0xac, 0x9a, 0x4a, 0xd9, 0xd2, 0xb6, 0x9a, 0xc4,
	0xc0, 0xd7, 0x46, 0x5e, 0x79, 0x6a, 0x35, 0xe5, 0xaf, 0x70, 0x54, 0x90, 0xd1, 0xac, 0x0c, 0x6d,
	0x9b, 0x4f, 0x21, 0x65, 0x4d, 0x6a, 0xe3, 0x1e, 0x09, 0xcf, 0x60, 0x6c, 0xc8, 0x18, 0xc9, 0xaa,
	0x7c, 0xa3, 0x36, 0xee, 0x00, 0x51, 0x7a, 0xa0, 0x16, 0x05, 0x0c, 0x9d, 0x92, 0xdc, 0xfd, 0x19,
	0xf6, 0xf8, 0xc5, 0xfc, 0xaa, 0x73, 0xda, 0xbd, 0x92, 0x9d, 0xed, 0x9c, 0x9c, 0xa1, 0x66, 0xb1,
	0x71, 0x0a, 0x94, 0x5f, 0xc2, 0xa4, 0xb7, 0x58, 0xd7, 0x8f, 0x30, 0xa8, 0x2b, 0x5b, 0xc5, 0x6e,
	0xff, 0x7d, 0xf3, 0x9d, 0x40, 0x1a, 0x9a, 0xf0, 0x1e, 0xc6, 0xdb, 0x77, 0x64, 0xf3, 0x98, 0x78,
	0x3f, 0xe0, 0x6c, 0xf6, 0x57, 0xeb, 0x07, 0xb0, 0x80, 0xc3, 0x1d, 0xdb, 0xd9, 0xbe, 0x41, 0xec,
	0x6c, 0x76, 0xb2, 0x77, 0x12, 0x3b, 0xfb, 0x92, 0xfa, 0xd7, 0xbe, 0xfd, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x59, 0xd9, 0x66, 0x0c, 0x03, 0x02, 0x00, 0x00,
}
